<resources>
    <string name="app_name">AdvisingV2</string>
    <string name="navigation_drawer_open">Open navigation drawer</string>
    <string name="navigation_drawer_close">Close navigation drawer</string>
    <string name="nav_header_title">UMD CS Advising</string>
    <string name="nav_header_subtitle">Your personal pocket advisor</string>
    <string name="nav_header_desc">Navigation header</string>
    <string name="action_settings">Settings</string>

    <string name="menu_resources">Resources</string>
    <string name="menu_gallery">Tools</string>
    <string name="menu_calendar">Advising Calendar</string>
    <string name="gpa_tab">GPA Calculator</string>
    <string name="course_requests">Course Request Form</string>
    <string name="four_year_plan">4 Year Plan</string>
    <string name="title_activity_utilities">UtilitiesActivity</string>
    <!-- TODO: Remove or change this placeholder text -->
    <string name="hello_blank_fragment">Hello blank fragment</string>


    <string name="undergrad_overview">At the Department of Computer Science, undergraduates are a priority. Here, you will meet 3,400 (and counting) of the nation\'s top computer science majors. This diverse group of students has interests ranging from systems to programming languages, from algorithms to design and from VR to Robotics. While you are an undergraduate here, you will study fundamentals in computing including programming languages and theory, which will help you later in a variety of courses we offer at the 400-level. After taking classes, perhaps doing research, participating in our honors program, or studying abroad, and completing internships, our students go on to some of the best graduate programs in the world or join start-ups, small and large tech companies, consulting firms, or government organizations.</string>
    <string name="undergrad_overview_title">Undergraduate Studies in Computer Science at the University of Maryland</string>

    <string name="contact_us">Contact Us!!</string>
    <string name="address">1st Floor, Brendan Iribe Center for Computer Science and Engineering</string>
    <string name="phone">(301) 405–2672</string>
    <string name="ugrad_email">ugrad@cs.umd.edu</string>
    <string name="hours">Monday - Friday 8:30 AM to 4:30 PM</string>
    <string name="socials">Facebook / Instagram / Twitter</string>

    <string name="advisors_title">Academic Advisors</string>
    <string name="contact_extra">Part of the Department of Computer Science Brendan Iribe Center for Computer Science and Engineering University of Maryland 8125 Paint Branch Drive College Park, MD 20742 (301) 405–2662</string>
    <string name="head_title">Heads of Staff</string>
    <string name="peers_title">Undergraduate Peer Advising Team</string>


    <string name="gpa_anticipated_header">Anticipated GPA Calculator</string>
    <string name="semester_gpa">Semester GPA:</string>
    <string name="cumulative_gpa">Cumulative GPA:</string>
    <string name="gpa_semester_help">To calculate your anticipated semester GPA:\n\t1. Press the "Add Course" Button to add a course to the calculator\n\t2. Enter the course name, number of credits, and grade.\n\t3. Press the ENTER button to add this course\n\t4. Repeat steps 1 through 3 for each course you are attempting</string>
    <string name="gpa_cumulative_help">To calculate your cumulative GPA:\n\t1. Enter your cumulative attempted credits (1–999)\n\t2. Enter your cumulative GPA between 0.0 and 4.0 </string>
    <string name="add_course">Add Course</string>
    <string name="semester_gpa_0_0">Semester GPA: 0.0</string>
    <string name="letter_grade_hint">+/- Letter Grade</string>
    <string name="course_name_hint">Course Name</string>
    <string name="calculate_cumulative">Calculate Cumulative</string>


    <string name="home">Dashboard</string>
    <string name="calendar">Upcoming</string>
    <string name="notifications">Inbox</string>
    <string name="tools">Settings</string>
    <string name="large_text">
        "Material is the metaphor.\n\n"

        "A material metaphor is the unifying theory of a rationalized space and a system of motion."
        "The material is grounded in tactile reality, inspired by the study of paper and ink, yet "
        "technologically advanced and open to imagination and magic.\n"
        "Surfaces and edges of the material provide visual cues that are grounded in reality. The "
        "use of familiar tactile attributes helps users quickly understand affordances. Yet the "
        "flexibility of the material creates new affordances that supercede those in the physical "
        "world, without breaking the rules of physics.\n"
        "The fundamentals of light, surface, and movement are key to conveying how objects move, "
        "interact, and exist in space and in relation to each other. Realistic lighting shows "
        "seams, divides space, and indicates moving parts.\n\n"

        "Bold, graphic, intentional.\n\n"

        "The foundational elements of print based design typography, grids, space, scale, color, "
        "and use of imagery guide visual treatments. These elements do far more than please the "
        "eye. They create hierarchy, meaning, and focus. Deliberate color choices, edge to edge "
        "imagery, large scale typography, and intentional white space create a bold and graphic "
        "interface that immerse the user in the experience.\n"
        "An emphasis on user actions makes core functionality immediately apparent and provides "
        "waypoints for the user.\n\n"

        "Motion provides meaning.\n\n"

        "Motion respects and reinforces the user as the prime mover. Primary user actions are "
        "inflection points that initiate motion, transforming the whole design.\n"
        "All action takes place in a single environment. Objects are presented to the user without "
        "breaking the continuity of experience even as they transform and reorganize.\n"
        "Motion is meaningful and appropriate, serving to focus attention and maintain continuity. "
        "Feedback is subtle yet clear. Transitions are efﬁcient yet coherent.\n\n"

        "3D world.\n\n"

        "The material environment is a 3D space, which means all objects have x, y, and z "
        "dimensions. The z-axis is perpendicularly aligned to the plane of the display, with the "
        "positive z-axis extending towards the viewer. Every sheet of material occupies a single "
        "position along the z-axis and has a standard 1dp thickness.\n"
        "On the web, the z-axis is used for layering and not for perspective. The 3D world is "
        "emulated by manipulating the y-axis.\n\n"

        "Light and shadow.\n\n"

        "Within the material environment, virtual lights illuminate the scene. Key lights create "
        "directional shadows, while ambient light creates soft shadows from all angles.\n"
        "Shadows in the material environment are cast by these two light sources. In Android "
        "development, shadows occur when light sources are blocked by sheets of material at "
        "various positions along the z-axis. On the web, shadows are depicted by manipulating the "
        "y-axis only. The following example shows the card with a height of 6dp.\n\n"

        "Resting elevation.\n\n"

        "All material objects, regardless of size, have a resting elevation, or default elevation "
        "that does not change. If an object changes elevation, it should return to its resting "
        "elevation as soon as possible.\n\n"

        "Component elevations.\n\n"

        "The resting elevation for a component type is consistent across apps (e.g., FAB elevation "
        "does not vary from 6dp in one app to 16dp in another app).\n"
        "Components may have different resting elevations across platforms, depending on the depth "
        "of the environment (e.g., TV has a greater depth than mobile or desktop).\n\n"

        "Responsive elevation and dynamic elevation offsets.\n\n"

        "Some component types have responsive elevation, meaning they change elevation in response "
        "to user input (e.g., normal, focused, and pressed) or system events. These elevation "
        "changes are consistently implemented using dynamic elevation offsets.\n"
        "Dynamic elevation offsets are the goal elevation that a component moves towards, relative "
        "to the component’s resting state. They ensure that elevation changes are consistent "
        "across actions and component types. For example, all components that lift on press have "
        "the same elevation change relative to their resting elevation.\n"
        "Once the input event is completed or cancelled, the component will return to its resting "
        "elevation.\n\n"

        "Avoiding elevation interference.\n\n"

        "Components with responsive elevations may encounter other components as they move between "
        "their resting elevations and dynamic elevation offsets. Because material cannot pass "
        "through other material, components avoid interfering with one another any number of ways, "
        "whether on a per component basis or using the entire app layout.\n"
        "On a component level, components can move or be removed before they cause interference. "
        "For example, a floating action button (FAB) can disappear or move off screen before a "
        "user picks up a card, or it can move if a snackbar appears.\n"
        "On the layout level, design your app layout to minimize opportunities for interference. "
        "For example, position the FAB to one side of stream of a cards so the FAB won’t interfere "
        "when a user tries to pick up one of cards.\n\n"
    </string>
    <string name="inbox">inbox</string>
    <string name="your_current_semester">Your Current Semester</string>
    <string name="my_four_year_plan">My Four Year Plan</string>
    <string name="dashboard_tabs">Dashboard Tabs</string>
    <string name="title_activity_home">HomeActivity</string>
    <string name="title_home">Home</string>
    <string name="title_dashboard">Dashboard</string>
    <string name="title_notifications">Notifications</string>
    <string name="planning">Planning</string>
    <string name="upcoming">Upcoming</string>
    <string name="textview">TextView</string>
    <string name="dummy_button">Dummy Button</string>
    <string name="dummy_content">DUMMY\nCONTENT</string>
    <string name="tabs">Tabs</string>
    <string name="cumulative_gpa_0_0">Cumulative GPA: 0.0</string>
    <!-- Preference Titles -->
    <string name="messages_header">Messages</string>
    <string name="sync_header">Sync</string>

    <!-- Messages Preferences -->
    <string name="signature_title">Your signature</string>
    <string name="reply_title">Default reply action</string>

    <!-- Sync Preferences -->
    <string name="sync_title">Sync email periodically</string>
    <string name="attachment_title">Download incoming attachments</string>
    <string name="attachment_summary_on">Automatically download attachments for incoming emails
    </string>
    <string name="attachment_summary_off">Only download attachments when manually requested</string>
    <string name="forms">Forms</string>
    <string name="cmsc_course_request_form">CMSC Course Request Form</string>
    <string name="subject_of_notification">Subject of Notification</string>
    <string name="example_body">This is where the text for the body of the notification will be shown. The text will all not show up. Only whatever fits in the container. Wher then user clicks the item, they wilj be able to see the whole thing as a dialog</string>
    <string name="textviewInbox">TextView</string>
    <string name="unread">Unread</string>
    <string name="grades">Grades</string>
    <string name="dashboardTitleTextView">Dashboard</string>
    <string name="upcomingTitle">Upcoming</string>
    <string name="mathRequirements"><font size="15"><b>Required Lower Level Coursework</b></font>\n\n
        <i>Math Requirements</i>:\n\n
<li>MATH140 (4) Calculus 1</li>\n
<li>MATH141 (4) Calculus 2</li>\n
<li>STAT4XX (3) Must have a prerequisite of MATH141; Cannot be cross listed with CMSC</li>\n
<li>MATH/STATXXX (3/4) Must have a prerequisite of MATH141; Cannot be cross listed with CMSC</li>\n\n

*Data Science and Machine Learning Students must take MATH240 (4) Linear Algebra</string>
    <string name="csRequirements"><i>Computer Science Requirements</i>:\n\n
    <li>CMSC131 (4) Object-Oriented Programming I* OR CMSC133 (2) Object-Oriented Programming I Beyond Fun</li>\n
    <li>CMSC132 (4) Object-Oriented Programming II</li>\n
    <li>CMSC216 (4) introduction to Computer Systems*</li>\n
    <li>CMSC250 (4) Discrete Structures*</li>\n
    <li>CMSC330 (3) Organizations of Programming Languages</li>\n
    <li>CMSC351 (3) Algorithms</li>\n
    *An exemption exam is available for this course
    </string>
    <string name="upperLevel"><font size="15"><b>Upper Level Concentration:</b></font>\n\n
    All students, regardless of specialization, must complete 12 credit hours of 300 - 400 level courses in one discipline outside of Computer Science with a cumulative GPA of 1.7 or higher in this coursework. No course that is in, or crosslisted as, CMSC may be counted in this requirement (e.g., AMSC460). Only 1 independent study or experiential learning course may be used. Students who are pursuing a minor or a double major/dual degree may use those credits in this area with the exception of a few majors/disciplines (e.g., Information Science). Please consult with your advisor to ensure the courses you plan to take to ensure they will satisfy this requirement.\n</string>
    <string name="LEP"><font size="15"><b>Limited Enrollment Program (LEP) Benchmarks*</b></font>\n\n
    * These benchmarks apply to new freshman (matriculated Fall 2019 and later), new transfer students, and internal transfers changing majors within the University *\n\n
    All students will undergo a benchmark review at 45 and 75 credits. Students in the major are required to complete the following courses:
    <font size="13"><b><i>45-Credit Benchmark Requirements</i></b></font>\n
        <li>Completion of CMSC 131 with a minimum grade of C-</li>\n
        <li>Completion of CMSC 132 with a minimum grade of C-</li>\n
        <li>Completion of MATH 140 with a minimum grade of C-</li>\n
        <li>A minimum grade point average of 2.0 in all courses taken at the University of Maryland and all other institutions</li>\n\n
    <font size="13"><b><i>75-Credit Benchmark Requirements</i></b></font>\n
        <li>Completion of CMSC 330 with a minimum grade of C-</li>\n
        <li>Completion of CMSC 351 with a minimum grade of C-</li>\n
        <li>Completion of a STAT4XX course (prerequisite: MATH141) with a minimum grade of C- or MATH/AMSC/STAT course (prerequisite: MATH141) with a minimum grade of C-</li>\n
        <li>A minimum grade point average of 2.0 in all courses taken at the University of Maryland and all other institutions</li>\n
    </string>
    <string name="degReqs"><font size="15"><b>Degree Requirements:</b></font>\n\n
    Students within the Computer Science major may choose to pursue our General Track or one of three specializations offered. Students are not required to pursue a specialization but may find one best fits their interests. Students interested in declaring a specialization should speak with their assigned academic advisor.\n\n
    Students, regardless of specialization, are required to fulfill their computer science upper level course requirements from at least 3 areas. Courses that fall within each area are listed in the General Track degree requirements. The five areas are:\n Area 1: Systems\n Area 2: Information Processing\n Area 3: Software Engineering and Programming Languages\n Area 4: Theory\n Area 5: Numerical Analysis\n\n
    For tracks requiring CMSC electives, three 1-credit CMSC STIC courses are equivalent to one 3-credit 300-400 level elective course. Visit UMD\'s official STICs website and our FAQ page for more information on STICs and see your assigned advisor for information on how STICs can fit into your specialization.\n</string>
    <string name="areas">\nAt the upper level, students take five (5) CMSC 400 level courses from at least three different areas (see below) with no more than three courses in a given area. An additional two (2) CMSC electives, totaling 6 credits, are also required. If students take more than three courses from an area, the additional course(s) will be counted as upper level computer science electives.\n\n
    <b>Area 1: Systems</b>\n
    <li>CMSC 411 (3) Computer Systems Architecture\n</li>
    <li>CMSC 412 (4) Operating Systems *\n</li>
    <li>CMSC 414 (3) Computer and Network Security\n</li>
    <li>CMSC 416 (3) Introduction to Parallel Computing\n</li>
    <li>CMSC 417 (3) Computer Networks\n</li>
    <li>CMSC 498X (3) Selected Topics in Computer Science; Introduction to Software-defined Radio and Wireless Communications (course will fulfill requirement for students who are enrolled the course in Fall 2018 or Fall 2019 semester *only*) or\n</li>
    <li>CMSC 498X* (3) Selected Topics in Computer Science; Introduction to Parallel Computing (course will fulfill requirement for students who are enrolled the course in Fall 2020 semester *only*)\n</li>
    <li>CMSC 498K* (3) Big Data Systems (course will fulfill requirement for students who are enrolled in the course in Spring 2018 or Spring 2019 *only*)\n\n</li>
    Students may not receive credit for both iterations of CMSC 498X at this time.\n\n

    <b>Area 2: Information Processing</b>\n
    <li>CMSC 420 (3) Data Structures\n</li>
    <li>CMSC 421 (3) Introduction to Artificial Intelligence\n</li>
    <li>CMSC 422 (3) Machine Learning *\n</li>
    <li>CMSC 423 (3) Bioinformatic Algorithms, Databases, and Tools\n</li>
    <li>CMSC 424 (3) Database Design\n</li>
    <li>CMSC 426 (3) Computer Vision *\n</li>
    <li>CMSC 427 (3) Computer Graphics *\n</li>
    <li>CMSC 470 (3) Introduction to Natural Language Processing *\n</li>
    <li>CMSC 471 (3) Introduction to Data Visualization (Area 2 OR Area 3)\n</li>
    <li>CMSC 498F (3) Selected Topics in Computer Science; Advances in XR (course will fulfill requirement for students who are enrolled the course in Spring 2022 semester *only*)\n</li>
    <li>CMSC 498V (3) Advanced Topics in Machine Learning (course will fulfill requirement students who are enrolled in the course in Fall 2018 *only*)\n\n</li>

    <b>Area 3: Software Engineering and Programming Languages</b>\n
    <li>CMSC 430 (3) Introduction to Compilers\n</li>
    <li>CMSC 433 (3) Programming Language Technologies and Paradigms\n</li>
    <li>CMSC 434 (3) Introduction to Human-Computer Interaction\n</li>
    <li>CMSC 435 (3) Software Engineering *\n</li>
    <li>CMSC 436 (3) Hand Held Programming Devices\n</li>
    <li>CMSC 471 (3) Introduction to Data Visualization (Area 2 OR Area 3)\n\n</li>

    <b>Area 4: Theory</b>\n
    <li>CMSC 451 (3) Design and Analysis of Computer Algorithms\n</li>
    <li>CMSC 452 (3) Elementary Theory of Computation\n</li>
    <li>CMSC 454 (3) Algorithms for Data Science\n</li>
    <li>CMSC 456 (3) Cryptology *\n</li>
    <li>CMSC 457 (3) Introduction to Quantum Computing\n</li>
    <li>CMSC 474 (3) Introduction to Computational Game Theory\n\n</li>

    <b>Area 5: Numerical Analysis (choose one)</b>\n
    <li>CMSC 460 (3) Computational Methods (credit will only be given for CMSC 460 or CMSC 466) *\n</li>
    <li>CMSC 466 (3) Introduction to Numerical Analysis (credit will only be given for CMSC 466 or CMSC 460) *\n\n</li>

    <b>CMSC Upper Level Electives</b>\n
    These courses do not count toward a distributive area for the General Track. If you have any questions about what courses will satisfy distributive area requirements, consult with your assigned academic advisor.\n/n
    <li>CMSC 320 (3) Introduction to Data Science\n</li>
    <li>CMSC 335 (3) Web Application Development with JavaScript (formerly CMSC398N)\n</li>
    <li>CMSC 388 or 389 (1) Student Initiated Courses (STICs)\n</li>
    <li>CMSC 389N (3) Special Topics in Computer Science; Introduction to PHP &amp; JavaScript\n</li>
    <li>CMSC 425 (3) Game Programming *\n</li>
    <li>CMSC 472 (3) Introduction to Deep Learning *\n</li>
    <li>CMSC 473 (3) Capstone in Machine Learning *\n</li>
    <li>CMSC 475 (3) Combinatorics and Game Theory *\n</li>
    <li>CMSC498 (1 - 3) Special Topics in Computer Science courses not otherwise listed in a distributive area\n</li>
    <li>CMSC 498A (1 - 3) Selected Topics in Computer Science: Independent Study\n</li>
    <li>CMSC 499A (1 - 3) Independent Undergraduate Research\n\n</li>

    * Indicates this course has unique prerequisites.</string>
    <string name="cyberText">\nStudents looking to pursue the cybersecurity specialization are required to complete the lower level courses (MATH140, MATH141, CMSC131, CMSC132, CMSC216, CMSC250), the additional required courses (CMSC330, CMSC351, MATH/STATXXX and STAT4xx beyond MATH141), and the upper level concentration. The difference in the specialization is the upper level computer science courses.\n
Students must fulfill their computer science upper level course requirements from at least 3 areas. Students may fulfill an area requirement under the Upper Level Elective Courses requirement. Courses that fall within each area are listed in the CS Distributive Areas and Electives document.\n\n
    <b>Required:\n</b>
    <li>CMSC 414 (3) Computer and Network Security</li>\n
    <li>CMSC 456 (3) Cryptology *</li>\n\n
    <b>Choose 4 courses from:\n</b>
    <li>CMSC 411 (3) Computer Systems Architecture</li>\n
    <li>CMSC 412 (4) Operating Systems *</li>\n
    <li>CMSC 417 (3) Computer Networks</li>\n
    <li>CMSC 430 (3) Introduction to Compilers</li>\n
    <li>CMSC 433 (3) Programming Language Technologies and Paradigms</li>\n
    <li>CMSC 451 (3) Design and Analysis of Computer Algorithms</li>\n\n
    <b>Upper Level Elective Courses\n</b>
    Students must select 3 credits from CMSC 300- or 400-level coursework (not eligible, CMSC330 and CMSC351)\n\n
    * Indicates this course has unique prerequisites.</string>
    <string name="dsText">\nStudents looking to pursue the data science specialization are required to complete the lower level courses (MATH140, MATH141, CMSC131, CMSC132, CMSC216, CMSC250), the additional required courses (CMSC330, CMSC351, STAT400 and MATH240), and the upper level concentration requirements. The difference in the specialization is the upper level computer science courses.\n
Students must fulfill their computer science upper level course requirements from at least 3 areas. Students may fulfill an area requirement under the Upper Level Elective Courses requirement. Courses that fall within each area are listed in the CS Distributive Areas and Electives document.\n\n
    <b>Required:\n</b>
    <li>MATH 240 (4) Linear Algebra</li>\n
    <li>STAT 400 (3) Applied Probability and Statistics I</li>\n
    <li>CMSC 320 (3) Introduction to Data Science</li>\n
    <li>CMSC 422 (3) Introduction to Machine Learning *</li>\n
    <li>CMSC 424 (3) Database Design</li>\n\n
    <b>Choose 1 course from:</b>\n
    <li>CMSC 402 (3) Bioinformatic Algorithms &amp; Methods for Functional Genomics and Proteomics</li>\n
    <li>CMSC 420 (3) Data Structures</li>\n
    <li>CMSC 421 (3) Introduction to Artificial Intelligence</li>\n
    <li>CMSC 423 (3) Bioinformatic Algorithms, Databases, and Tools</li>\n
    <li>CMSC 425 (3) Game Programming *</li>\n
    <li>CMSC 426 (3) Computer Vision</li>\n
    <li>CMSC 427 (3) Computer Graphics *</li>\n
    <li>CMSC 470 (4) Natural Language Processing *</li>\n\n
    <b>Choose 1 course from:\n</b>
    <li>CMSC 451 (3) Design and Analysis of Computer Algorithms</li>\n
    <li>CMSC 454 (3) Algorithms for Data Science</li>\n
    <li>CMSC 460 (3) Computational Methods</li>\n\n
    <b>Choose 2 courses from:\n</b>
    <li>CMSC 411 (3) Computer Systems Architecture</li>\n
    <li>CMSC 412 (4) Operating Systems *</li>\n
    <li>CMSC 414 (3) Computer and Network Security</li>\n
    <li>CMSC 417 (3) Computer Networks</li>\n
    <li>CMSC 430 (3) Introduction to Compilers</li>\n
    <li>CMSC 433 (3) Programming Language Technologies and Paradigms</li>\n
    <li>CMSC 434 (3) Introduction to Human-Computer Interaction</li>\n
    <li>CMSC 435 (3) Software Engineering *</li>\n\n
    * Indicates this course has unique prerequisites.</string>
    <string name="qiText">\nStudents looking to pursue the quantum information specialization are required to complete the lower level courses (MATH140, MATH141, CMSC131, CMSC132, CMSC216, CMSC250), the additional required courses (CMSC330, CMSC351, STAT4xx with a MATH141 prerequisite, and MATH240), and the upper level concentration requirements. The difference in the specialization is the upper level computer science courses. Students must fulfill their computer science upper level course requirements from at least 3 areas.\n\n
Students must fulfill their computer science upper level course requirements from at least 3 areas. Students may fulfill an area requirement under the Upper Level Elective Courses requirement. Courses that fall within each area are listed in the CS Distributive Areas and Electives document.\n\n
    <b>Required:\n</b>
    <li>MATH 240 (4) Linear Algebra</li>\n
    <li>CMSC 457 (3) Introduction to Quantum Computing *</li>\n
    <li>PHYS 467 (3) Introduction to Quantum Technology *</li>\n\n
    <b>Choose 4 courses from:\n</b>
    <li>CMSC 411 (3) Computer Systems Architecture</li>\n
    <li>CMSC 412 (4) Operating Systems *</li>\n
    <li>CMSC 417 (3) Computer Networks</li>\n
    <li>CMSC 430 (3) Introduction to Compilers</li>\n
    <li>CMSC 433 (3) Programming Language Technologies and Paradigms</li>\n
    <li>CMSC 451 (3) Design and Analysis of Computer Algorithms</li>\n\n
    <b>Upper Level Elective Courses</b>\n
    Students must select 3 credits from CMSC 300- or 400-level coursework (not eligible, CMSC330 and CMSC351)\n\n
    * Indicates this course has unique prerequisites.</string>
    <string name="mlText">\nStudents looking to pursue the machine learning specialization are required to complete the lower level courses (MATH140, MATH141, CMSC131, CMSC132, CMSC216, CMSC250), the additional required courses (CMSC330, CMSC351, STAT4xx with a MATH141 prerequisite, and MATH240), and the upper level concentration requirements. The difference in the specialization is the upper level computer science courses. Students must fulfill their computer science upper level course requirements from at least 3 areas.\n
Students must fulfill their computer science upper level course requirements from at least 3 areas. Students may fulfill an area requirement under the Upper Level Elective Courses requirement. Courses that fall within each area are listed in the CS Distributive Areas and Electives document.\n\n
    <b>Required:\n</b>
    <li>MATH 240 (4) Linear Algebra</li>\n
    <li>CMSC 320 (3) Introduction to Data Science</li>\n
    <li>CMSC 421 (3) Introduction to Artificial Intelligence</li>\n
    <li>CMSC 422 (3) Introduction to Machine Learning *</li>\n\n
    <b>Choose 2 courses from:\n</b>
    <li>CMSC 426 (3) Computer Vision *</li>\n
    <li>CMSC/AMSC 460 (3) Computational Methods * <b>or</b> CMSC/AMSC 466 (3) Introduction to Numerical Analysis I * <b>or</b> MATH 401 (3) Applications of Linear Algebra *</li>\n
    <li>CMSC 470 (3) Natural Language Processing *</li>\n
    <li>CMSC 472 (3) Introduction to Deep Learning (formerly CMSC 498L)</li>\n
    <li>CMSC 473 (3) Capstone in Machine Learning (formerly CMSC 498P)</li>\n
    <li>CMSC 474 (3) Introduction to Computational Game Theory</li>\n
    <li>CMSC 476 (3) Robotics and Perception</li>\n\n
    <b>Upper Level Elective Courses</b>\n
    Six credits from CMSC3XX or CMSC4XX excluding CMSC330 and CMSC351\n\n
    * Indicates this course has unique prerequisites.</string>

</resources>